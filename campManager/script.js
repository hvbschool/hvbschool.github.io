var vars = {misc: { campName: "123456789012345678901", demographicName: "12345678901", cookies: true, developerMode: true, killWorkers: false, kill: true, money: 100, randomNames: ["Never Forget"], randomDemos: ["People"], }, people: { total: 0, children: 0, elders: 0, workers: 0, corpse: 0, worth: 1, livingCost: 1/5, livingCostTotal: 0, }, days: { date: 0, time: 7200, def: 7200, }, limits: { person: 0, corpse: 0, }, trucks: { on: true, num: 0, cost: 10, startCost: 10, expo: 1.06, costMultiplier: 2, standardEfficiency: 3, efficiency: 3, time: 240, def: 240, }, gallows: { on: true, num: 0, cost: 10, startCost: 10, costMultiplier: 1, expo: 1.06, standardEfficiency: 3, efficiency: 3, tempEfficiency: 0, time: 300, def: 300, }, fire: { on: true, num: 0, cost: 10, startCost: 10, costMultiplier: 5, expo: 1.01, standardEfficiency: 1, efficiency: 1, tempEfficiency: 1, time: 240, def: 240, }, barracks: { num: 1, cost: 10, pplCost: 10, efficiency: 0, standardEfficiency: 16, making: false, time: 1200, def: 1200, workers: 0, }, pits: { num: 1, pplCost: 10, time: 600, def: 600, making: false, standardEfficiency: 16, efficiency: 0, workers: 0, }, }; var app = { init: function() { if (vars.misc.cookies && app.checkCookie("misc.campName")) { app.loadGame(); app.developerLog("Camp is", vars.misc.campName); app.developerLog("Demographic is", vars.misc.demographicName); document.title = vars.misc.campName + " | Camp Manager"; $('#welcome').empty(); $("#welcome").append("Welcome To " + vars.misc.campName); } else { while (vars.misc.campName.length > 20) { vars.misc.campName = prompt("THIS IS FOR ANTI-GEONOCIDE PURPOSES TO RAISE AWARENESS\n\nWhat is the name of your camp?\nMAX CHARACTERS 20"); } while (vars.misc.demographicName.length > 10) vars.misc.demographicName = prompt("What is the name of the demographic you want to persecute?\n\nMAX CHARACTERS 10"); } if (vars.misc.campName === "" || vars.misc.campName === undefined) { var random = Math.floor(Math.random() * vars.misc.randomNames.length); vars.misc.campName = vars.misc.randomNames[random]; } if (vars.misc.demographicName === "" || vars.misc.demographicName === undefined) { var rdm = Math.floor(Math.random() * vars.misc.randomDemos.length); vars.misc.demographicName = vars.misc.randomDemos[rdm]; } app.developerLog("Camp is", vars.misc.campName); app.developerLog("Demographic is", vars.misc.demographicName); document.title = vars.misc.campName + " | Camp Manager"; $("#welcome").html("Welcome To " + vars.misc.campName + "</h1>"); if (vars.misc.cookies) { app.setCookie("misc.campName", vars.misc.campName, 10000); app.setCookie("misc.demographicName", vars.misc.demographicName, 10000); } app.developerMode(); app.game = setInterval(app.update, 16.666666666666666666666); if (vars.misc.cookies) { app.save = setInterval(app.saveGame, 180000); } }, update: function() { $('#money').empty(); $('#money').append(vars.misc.money + "$"); $('#people').empty(); $('#people').append(vars.people.total + "/" + vars.limits.person + " " + vars.misc.demographicName); $('#corpses').empty(); $('#corpses').append(vars.people.corpse + "/" + vars.limits.corpse + " Corpses"); $('#seperation').empty(); $('#seperation').append(vars.people.children + " children | " + vars.people.workers + " workers | " + vars.people.elders + " elders"); $('#livingCost').empty(); $('#livingCost').append("Food Portions are " + vars.people.livingCostTotal + "$ each day"); $('#trucksAmount').empty(); $('#trucksAmount').append(vars.trucks.num); $('#truckCost').empty(); $('#truckCost').append("Cost: " + vars.trucks.cost + "$"); $('#trucksInfo').empty(); $('#trucksInfo').append("Your trucks brings " + vars.trucks.efficiency + " people every " + vars.trucks.def / 60 + " seconds"); $('#gallowsAmount').empty(); $('#gallowsAmount').append(vars.gallows.num); $('#gallowsCost').empty(); $('#gallowsCost').append("Cost: " + vars.gallows.cost + "$"); $('#gallowsInfo').empty(); $('#gallowsInfo').append("Your gallows kill " + vars.gallows.efficiency + " people every " + Math.round(vars.gallows.def / 60 * 10) / 10 + " seconds"); $('#fireAmount').empty(); $('#fireAmount').append(vars.fire.num); $('#fireCost').empty(); $('#fireCost').append("Cost: " + vars.fire.cost + "$"); $('#fireInfo').empty(); $('#fireInfo').append("Your fires burns " + vars.fire.efficiency + " corpses every " + vars.fire.def / 60 + " seconds"); $('#barracksAmount').empty(); $('#barracksAmount').append(vars.barracks.num); $('#barracksInfo').empty(); $('#barracksInfo').append("Your barracks will holds " + vars.barracks.efficiency + " People"); $('#pitsAmount').empty(); $('#pitsAmount').append(vars.pits.num); $('#pitsInfo').empty(); $('#pitsInfo').append("Your death pit holds " + vars.pits.efficiency + " Corpses"); vars.people.total = vars.people.elders + vars.people.workers + vars.people.children; vars.trucks.efficiency = vars.trucks.num * vars.trucks.standardEfficiency; vars.gallows.efficiency = vars.gallows.num * vars.gallows.standardEfficiency; vars.fire.efficiency = vars.fire.num * vars.fire.standardEfficiency; vars.barracks.efficiency = vars.barracks.num * vars.barracks.standardEfficiency; vars.limits.person = vars.barracks.efficiency; vars.pits.efficiency = vars.pits.num * vars.pits.standardEfficiency; vars.limits.corpse = vars.pits.efficiency; vars.people.livingCostTotal = Math.round(vars.people.total * vars.people.livingCost*10)/10; vars.days.time--; if (vars.days.time === 0) { vars.days.date++; vars.days.time = vars.days.def; app.developerLog("It is now day ", vars.days.date); $('#welcome').empty(); if (vars.days.date === 1) { $("#welcome").append("Welcome To " + vars.misc.campName + " " + vars.days.date + " Day Running"); } else { $("#welcome").append("Welcome To " + vars.misc.campName + " " + vars.days.date + " Days Running"); } vars.misc.money = vars.misc.money - vars.people.livingCostTotal; } if (vars.barracks.making === true && vars.people.workers >= vars.barracks.pplCost) { vars.barracks.time--; } if(vars.barracks.making) { $('#barracksStart').empty(); $('#barracksStart').append("&#10003;"); } else { $('#barracksStart').empty(); $('#barracksStart').append("X"); } if (vars.barracks.time === 0) { vars.barracks.time = vars.barracks.def; vars.barracks.num = vars.barracks.num + 1; vars.barracks.making = false; } if (vars.pits.making === true && vars.people.workers >= vars.pits.pplCost) { vars.pits.time--; } if (vars.pits.time === 0) { vars.pits.time = vars.pits.def; vars.pits.num = vars.pits.num + 1; vars.pits.making = false; } if (vars.pits.making) { $('#pitsStart').empty(); $('#pitsStart').append("&#10003;"); } else { $('#pitsStart').empty(); $('#pitsStart').append("X"); } $("#trucksProgress").progressbar({ value: (vars.trucks.time / vars.trucks.def * 100) }); $("#gallowsProgress").progressbar({ value: (vars.gallows.time / vars.gallows.def * 100) }); $("#fireProgress").progressbar({ value: (vars.fire.time / vars.fire.def * 100) }); $("#pitsProgress").progressbar({ value: (vars.pits.time / vars.pits.def * 100) }); $("#barracksProgress").progressbar({ value: (vars.barracks.time / vars.barracks.def * 100) }); vars.fire.cost = Math.round((vars.fire.costMultiplier * vars.fire.num) * Math.pow(vars.fire.expo,vars.fire.num) + vars.fire.startCost); vars.trucks.cost = Math.round((vars.trucks.costMultiplier * vars.trucks.num) * Math.pow(vars.trucks.expo,vars.trucks.num) + vars.trucks.startCost); vars.gallows.cost = Math.round((vars.gallows.costMultiplier * vars.gallows.num) * Math.pow(vars.gallows.expo,vars.gallows.num) + vars.gallows.startCost); if (vars.trucks.num !== 0 && vars.limits.person >= (vars.trucks.efficiency + vars.people.total) && vars.trucks.on && vars.trucks.time >= 0) { vars.trucks.time--; if (vars.trucks.time === 0) { vars.trucks.time = vars.trucks.def; if (vars.limits.person >= (vars.trucks.efficiency + vars.people.total)) { var val1 = Math.floor(Math.random() * vars.trucks.efficiency) + 1; var val2 = 0; var val3 = 0; if (val1 != vars.trucks.efficiency) { val2 = Math.floor(Math.random() * (vars.trucks.efficiency - val1)) + 1; val3 = (vars.trucks.efficiency - val1) - val2; } vars.people.children = vars.people.children + val2; vars.people.workers = vars.people.workers + val1; vars.people.elders = vars.people.elders + val3; vars.misc.money = vars.misc.money + vars.people.worth * vars.trucks.efficiency; } } } if (vars.gallows.num !== 0 && vars.misc.kill && vars.people.total > 0 && vars.people.corpse + 1 <= vars.limits.corpse && (vars.misc.killWorkers || (vars.people.elders + vars.people.children > 0)) && vars.gallows.on && vars.gallows.time >= 0) { vars.gallows.time--; if (vars.gallows.time === 0) { vars.gallows.time = vars.gallows.def; for (i = 0; i < vars.gallows.efficiency; i++) { if (vars.gallows.tempEfficiency < vars.gallows.efficiency && vars.people.corpse + 1 <= vars.limits.corpse) { if (vars.people.elders !== 0) { vars.people.elders--; vars.people.corpse++; vars.gallows.tempEfficiency++; } else if (vars.people.children !== 0) { vars.people.children--; vars.people.corpse++; vars.gallows.tempEfficiency++; } else if (vars.misc.killWorkers && vars.people.workers !== 0) { vars.people.workers--; vars.people.corpse++; vars.gallows.tempEfficiency++; } else { vars.gallows.tempEfficiency = vars.gallows.efficiency; } } vars.gallows.tempEfficiency = 0; } } } if (vars.fire.num !== 0 && vars.people.corpse !== 0 && vars.fire.on && vars.fire.time >= 0) { vars.fire.time--; if (vars.fire.time === 0) { vars.fire.time = vars.fire.def; vars.fire.tempEfficiency = vars.fire.efficiency; for (i = 0; i < vars.fire.tempEfficiency; i++) { if (vars.people.corpse !== 0) { vars.people.corpse--; } } } } }, saveGame: function() { for (object in vars) { for (i in vars[object]) { app.setCookie(String(object + "." + i), vars[object][i], 1000); } } app.developerLog("Game successfully saved...", ""); }, loadGame: function() { for (object in vars) { for (i in vars[object]) { vars[object][i] = app.getCookie(String(object + "." + i)); } } app.developerLog("Game successfully loaded...", ""); }, developerMode: function() { $(document).keyup(function(e) { if (vars.misc.developerMode && e.keyCode == 18) { app.deleteAllCookies(); app.developerLog("Cookies deleted...", ""); } }); }, developerLog: function(str, variable) { if (vars.misc.developerMode) { if ((str !== "" || str != undefined) && (variable !== "" || variable !== undefined)) { console.log(str + ": " + variable); } else if (variable === "" || variable === undefined) { console.log(str); } } }, deleteAllCookies: function() { var cookies = document.cookie.split(";"); for (var i = 0; i < cookies.length; i++) { var cookie = cookies[i]; var eqPos = cookie.indexOf("="); var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie; document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT"; } app.developerLog("All cookies deleted...", ""); }, setCookie: function(cname, cvalue, exdays) { var d = new Date(); d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000)); var expires = "expires=" + d.toUTCString(); document.cookie = cname + "=" + cvalue + "; " + expires; app.developerLog("Cookie set", cname); }, getCookie: function(cname) { var name = cname + "="; var ca = document.cookie.split(';'); for (var i = 0; i < ca.length; i++) { var c = ca[i]; while (c.charAt(0) == ' ') { c = c.substring(1); } if (c.indexOf(name) === 0) { return c.substring(name.length, c.length); } } return ""; }, checkCookie: function(cname) { var user = app.getCookie(cname); if (user !== "") { return true; } }, }; $(document).ready(function() { app.init(); $('#killWorkers').click(function() { if (vars.misc.killWorkers) { vars.misc.killWorkers = false; $('#killWorkers').empty(); $('#killWorkers').append("Start Killing <br> Workers"); $('#killWorkers').css('background-color', '#00ff00'); } else if (!vars.misc.killWorkers) { vars.misc.killWorkers = true; $('#killWorkers').empty(); $('#killWorkers').append("Stop Killing <br> Workers"); $('#killWorkers').css('background-color', 'red'); } }); $('#trucksIMG').click(function() { if (vars.misc.money - vars.trucks.cost >= 0) { vars.trucks.num = vars.trucks.num + 1; vars.misc.money = vars.misc.money - vars.trucks.cost; console.log("trucks"); } }); $('#gallowsIMG').click(function() { if (vars.misc.money - vars.gallows.cost >= 0) { vars.gallows.num = vars.gallows.num + 1; vars.misc.money = vars.misc.money - vars.gallows.cost; console.log("Gallows"); } }); $('#fireIMG').click(function() { if (vars.misc.money - vars.fire.cost >= 0) { vars.fire.num = vars.fire.num + 1; vars.misc.money = vars.misc.money - vars.fire.cost; console.log("fire"); } }); $('#barracksIMG').click(function() { if (vars.people.workers - vars.barracks.pplCost >= 0) { vars.barracks.making = true; } }); $('#pitsIMG').click(function() { if (vars.people.workers - vars.pits.pplCost >= 0 && !vars.pits.making) { vars.pits.making = true; } }); $('#truckstart').click(function() { if (vars.trucks.on) { $('#truckstart').empty(); $('#truckstart').append('X'); vars.trucks.on = false; } else { $('#truckstart').empty(); $('#truckstart').append('&#10003;'); vars.trucks.on = true; } }); $('#gallowsStart').click(function() { if (vars.gallows.on) { $('#gallowsStart').empty(); $('#gallowsStart').append('X'); vars.gallows.on = false; } else { $('#gallowsStart').empty(); $('#gallowsStart').append('&#10003;'); vars.gallows.on = true; } }); $('#fireStart').click(function() { if (vars.fire.on) { $('#fireStart').empty(); $('#fireStart').append('X'); vars.fire.on = false; } else { $('#fireStart').empty(); $('#fireStart').append('&#10003;'); vars.fire.on = true; } }); });
